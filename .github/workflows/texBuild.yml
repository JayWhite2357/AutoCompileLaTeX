name: Compile all tex files
on:
  push:
    branches-ignore:
      - '**/pdfs'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Get Cache Key
      id: get-cache-key
      env:
        DEFAULT_LATEX_PACKAGES: texlive-latex-extra latexmk
      run: |
        LATEX_PACKAGES=$(if test -f LATEX_PACKAGES; then cat LATEX_PACKAGES; else echo $DEFAULT_LATEX_PACKAGES; fi;)
        CACHE_KEY=$(apt-cache policy $LATEX_PACKAGES | grep -oP "^[^ ]*:|(?<=Candidate: )[^ ]*" | tr -d '[:space:]')
        echo "::set-output name=key::$CACHE_KEY"
        echo "::set-output name=packs::$LATEX_PACKAGES"
    - name: Cache LaTeX
      id: cache-latex
      uses: actions/cache@v2
      with:
        path: ~/latex-cache
        key: ${{ steps.get-cache-key.outputs.key }}
    - name: Install LaTeX if not cached
      if: steps.cache-latex.outputs.cache-hit != 'true'
      env:
        LATEX_PACKAGES: ${{ steps.get-cache-key.outputs.packs }}
      run: |
        TF=$(mktemp)
        mkdir -p ~/latex-cache
        apt-get install -s $LATEX_PACKAGES | grep -oP "(?<=Inst )[^ ]*" > $TF
        sudo apt install -y $LATEX_PACKAGES
        cat $TF | xargs dpkg -L | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | grep -v "^/usr/share/doc/" | xargs cp --parents -t ~/latex-cache
    - name: Install LaTeX if cached
      if: steps.cache-latex.outputs.cache-hit == 'true'
      run: sudo cp --verbose --force --recursive ~/latex-cache/* /
    - name: Run all executable .sh files
      run: find . -type f -executable -name "*.sh" -execdir {} \;
    - name: Compile all .tex files
      run: find . -type f -name "*.tex" -execdir latexmk -pdf -interaction=batchmode  {} \;
    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        NEW_BRANCH=$(git rev-parse --abbrev-ref HEAD)/pdfs
        NEW_MESSAGE="$(git log -1 --pretty=%B) [generate pdfs branch]"
        git checkout --orphan $NEW_BRANCH
        git rm --cached -rf .
        find . -type f -name "*.tex" -execdir bash -c 'filename={};git add -f "${filename%.tex}.pdf";' \;
        git commit -m $NEW_MESSAGE
        git push -f origin $NEW_BRANCH
